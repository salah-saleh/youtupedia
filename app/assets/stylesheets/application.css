/*
 * This is a manifest file that'll be compiled into application.css.
 *
 * With Propshaft, assets are served efficiently without preprocessing steps. You can still include
 * application-wide styles in this file, but keep in mind that CSS precedence will follow the standard
 * cascading order, meaning styles declared later in the document or manifest will override earlier ones,
 * depending on specificity.
 *
 * Consider organizing styles into separate files for maintainability.
 */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Snake border animation - travels around the perimeter */
.search-container {
  position: relative;
  border-radius: 12px;
}

/* Create 4 separate elements for each side of the border */
.search-container::before,
.search-container::after {
  content: '';
  position: absolute;
  background: linear-gradient(90deg, transparent, #9333ea, transparent);
  z-index: 1;
}

/* Top border segment */
.search-container::before {
  top: -2px;
  left: -2px;
  right: -2px;
  height: 4px;
  border-radius: 12px 12px 0 0;
  animation: snake-top 4s linear infinite;
}

/* Bottom border segment */
.search-container::after {
  bottom: -2px;
  left: -2px;
  right: -2px;
  height: 4px;
  border-radius: 0 0 12px 12px;
  animation: snake-bottom 4s linear infinite;
  animation-delay: 2s;
}

/* Create side borders using pseudo-elements on child elements */
.search-container .search-input::before,
.search-container .search-input::after {
  content: '';
  position: absolute;
  background: linear-gradient(0deg, transparent, #9333ea, transparent);
  z-index: 1;
  width: 4px;
}

/* Left border segment */
.search-container .search-input::before {
  top: -2px;
  bottom: -2px;
  left: -2px;
  border-radius: 12px 0 0 12px;
  animation: snake-left 4s linear infinite;
  animation-delay: 3s;
}

/* Right border segment */
.search-container .search-input::after {
  top: -2px;
  bottom: -2px;
  right: -2px;
  border-radius: 0 12px 12px 0;
  animation: snake-right 4s linear infinite;
  animation-delay: 1s;
}

@keyframes snake-top {
  0%, 25% { opacity: 0; }
  12.5%, 37.5% { opacity: 1; }
  50%, 100% { opacity: 0; }
}

@keyframes snake-right {
  0%, 25% { opacity: 0; }
  37.5%, 62.5% { opacity: 1; }
  75%, 100% { opacity: 0; }
}

@keyframes snake-bottom {
  0%, 50% { opacity: 0; }
  62.5%, 87.5% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes snake-left {
  0%, 75% { opacity: 0; }
  87.5%, 100% { opacity: 1; }
  0%, 12.5% { opacity: 1; }
  25%, 75% { opacity: 0; }
}

.search-container.focused::before,
.search-container.focused::after,
.search-container.focused .search-input::before,
.search-container.focused .search-input::after,
.search-container.has-content::before,
.search-container.has-content::after,
.search-container.has-content .search-input::before,
.search-container.has-content .search-input::after {
  animation-play-state: paused;
  opacity: 0;
}

.search-container .search-input {
  position: relative;
  z-index: 2;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(209, 213, 219, 0.5);
}

.dark .search-container .search-input {
  background: rgba(31, 41, 55, 0.9);
  border: 1px solid rgba(75, 85, 99, 0.5);
}

.search-container.focused .search-input {
  background: rgba(255, 255, 255, 0.98);
  border-color: #9333ea;
  box-shadow: 0 0 0 3px rgba(147, 51, 234, 0.1);
}

.dark .search-container.focused .search-input {
  background: rgba(31, 41, 55, 0.95);
  border-color: #a855f7;
  box-shadow: 0 0 0 3px rgba(168, 85, 247, 0.1);
}

.aspect-w-16 {
  position: relative;
  padding-bottom: 56.25%;
}

.aspect-w-16 iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
