<%# Pagination Component
    Provides consistent pagination controls with support for both standard and YouTube-style pagination.

    Parameters:
    - current_page: Integer - Current page number
    - total_pages: Integer - Total number of pages
    - path: String - Base path for pagination links
    Optional Parameters:
    - youtube_pagination: Boolean - Whether to use YouTube-style pagination (default: false)
    - next_token: String - YouTube API next page token
    - prev_token: String - YouTube API previous page token
%>

<%# Pagination component that can be reused across the application %>
<%# Required local variables for standard pagination: %>
<%# - current_page: Current page number %>
<%# - total_pages: Total number of pages %>
<%# Required local variables for YouTube pagination: %>
<%# - next_token: Token for the next page %>
<%# - prev_token: Token for the previous page %>
<%# Optional local variables: %>
<%# - path: Base path for pagination links %>
<%# - params: Additional params to preserve in pagination links (default: {}) %>
<%# - class_names: Additional CSS classes for the pagination container (default: '') %>
<%# - youtube_pagination: Boolean to indicate if using YouTube API pagination (default: false) %>
<%# - turbo_frame_id: String for the turbo frame ID (defaults to "summaries_content") %>

<%
  params ||= {}
  class_names ||= ''
  youtube_pagination ||= false
  turbo_frame_id ||= 'summaries_content'

  # Helper to build pagination URL with params
  def build_pagination_url(path, params: {}, page: nil, page_token: nil)
    url_params = params.dup
    url_params[:page] = page if page
    url_params[:page_token] = page_token if page_token
    path + "?" + url_params.to_query
  end

  # Common link classes
  link_classes = "inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500 dark:text-gray-400 hover:border-gray-300 dark:hover:border-gray-600 hover:text-gray-700 dark:hover:text-gray-300"
  active_classes = "inline-flex items-center border-t-2 border-indigo-500 dark:border-indigo-400 px-4 pt-4 text-sm font-medium text-indigo-600 dark:text-indigo-400"
  ellipsis_classes = "inline-flex items-center border-t-2 border-transparent px-4 pt-4 text-sm font-medium text-gray-500 dark:text-gray-400"

  # Helper to determine which pages to show
  def pages_to_show(current_page, total_pages)
    return (1..total_pages).to_a if total_pages <= 7
    
    pages = [1]  # Always show first page
    
    # If we're not near the start, add ellipsis and previous page
    if current_page > 3
      pages += [nil, current_page - 1]
    end
    
    # Add current page if not already included
    pages << current_page unless current_page == 1
    
    # If we're not near the end, add next page and ellipsis
    if current_page < total_pages - 2
      pages += [current_page + 1, nil]
    end
    
    # Add last page if not already included
    pages << total_pages unless pages.last == total_pages
    pages
  end
%>

<nav class="flex items-center justify-between border-t border-gray-200 dark:border-gray-700 px-4 sm:px-0 mt-4" aria-label="Pagination">
  <%# Previous page link %>
  <div class="-mt-px flex w-0 flex-1">
    <% if youtube_pagination %>
      <% if prev_token.present? %>
        <%= link_to build_pagination_url(path, params: params, page_token: prev_token), 
              class: link_classes,
              data: { turbo_frame: turbo_frame_id } do %>
          <svg class="mr-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z" clip-rule="evenodd" />
          </svg>
          Previous
        <% end %>
      <% end %>
    <% else %>
      <% if current_page > 1 %>
        <%= link_to build_pagination_url(path, params: params, page: current_page - 1), 
              class: link_classes,
              data: { turbo_frame: turbo_frame_id } do %>
          <svg class="mr-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z" clip-rule="evenodd" />
          </svg>
          Previous
        <% end %>
      <% end %>
    <% end %>
  </div>

  <%# Page numbers %>
  <div class="hidden md:-mt-px md:flex">
    <% if youtube_pagination %>
      <%= link_to build_pagination_url(path, params: params.except(:page)),
            class: link_classes,
            data: { turbo_frame: turbo_frame_id } do %>
        Top
      <% end %>
    <% else %>
      <% pages_to_show(current_page, total_pages).each do |page| %>
        <% if page.nil? %>
          <span class="<%= ellipsis_classes %>">...</span>
        <% elsif page == current_page %>
          <span class="<%= active_classes %>">
            <%= page %>
          </span>
        <% else %>
          <%= link_to build_pagination_url(path, params: params, page: page),
                class: link_classes,
                data: { turbo_frame: turbo_frame_id } do %>
            <%= page %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  </div>

  <%# Next page link %>
  <div class="-mt-px flex w-0 flex-1 justify-end">
    <% if youtube_pagination %>
      <% if next_token.present? %>
        <%= link_to build_pagination_url(path, params: params, page_token: next_token),
              class: link_classes,
              data: { turbo_frame: turbo_frame_id } do %>
          Next
          <svg class="ml-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z" clip-rule="evenodd" />
          </svg>
        <% end %>
      <% end %>
    <% else %>
      <% if current_page < total_pages %>
        <%= link_to build_pagination_url(path, params: params, page: current_page + 1),
              class: link_classes,
              data: { turbo_frame: turbo_frame_id } do %>
          Next
          <svg class="ml-3 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z" clip-rule="evenodd" />
          </svg>
        <% end %>
      <% end %>
    <% end %>
  </div>
</nav>